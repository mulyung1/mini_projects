# -*- coding: utf-8 -*-
"""
/***************************************************************************
 SpiralGeneratorDialog
                                 A QGIS plugin
 This plugin creates spiral (similar to a loxodrome) LineStrings. Starting from a given coordinate, with given parameters, create 10 right and 10 left logarithmic spirals every 36 degrees, which pass through the Earth and end at the antipodal point of the starting coordinate.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-08-29
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Victor Mulyungi
        email                : victorsonofmartin@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'sSpiralgenerator_dialog_base.ui'))


class SpiralGeneratorDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(SpiralGeneratorDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
